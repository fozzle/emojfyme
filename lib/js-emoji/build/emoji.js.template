;(function() {

function emoji(){}
	emoji.img_path = 'emoji/';
	emoji.use_css_imgs = false;
	emoji.inits = {};
	emoji.map = {};
	emoji.text_mode = false;
	emoji.include_title = false;
	emoji.replace_colons = function(str){
		emoji.init_colons();
		return str.replace(emoji.rx_colons, function(m){
			var idx = m.substr(1, m.length-2);
			var val = emoji.map.colons[idx];
			return val ? emoji.replacement(val) : m;
		});
	};
	emoji.replace_unified = function(str){
		emoji.init_unified();
		return str.replace(emoji.rx_unified, function(m){
			var val = emoji.map.unified[m];
			return val ? emoji.replacement(val) : m;
		});
	};
	emoji.replacement = function(idx){
		var text_name = emoji.data[idx][4] || ':'+emoji.data[idx][3][0]+':';
		if (emoji.text_mode) return text_name;
		emoji.init_env();
		if (emoji.replace_mode == 'unified'  && emoji.data[idx][0]) return emoji.data[idx][0];
		if (emoji.replace_mode == 'softbank' && emoji.data[idx][1]) return emoji.data[idx][1];
		if (emoji.replace_mode == 'google'   && emoji.data[idx][2]) return emoji.data[idx][2];
		var img = emoji.img_path+idx+'.png';
		var title = emoji.include_title ? ' title="'+emoji.data[idx][3][0]+'"' : '';
		if (emoji.supports_css && emoji.use_css_imgs) return '<span class="emoji emoji-'+idx+'">:'+emoji.data[idx][3][0]+':</span>';
		if (emoji.supports_css) return '<span class="emoji" style="background-image:url('+img+')"'+title+'>:'+emoji.data[idx][3][0]+':</span>';
		return '<img src="'+img+'" class="emoji" '+title+'/>';
	};
	emoji.init_colons = function(){
		if (emoji.inits.colons) return;
		emoji.inits.colons = 1;
		emoji.rx_colons = new RegExp('\:[^\\s:]+\:', 'g');
		emoji.map.colons = {};
		for (var i in emoji.data){
			for (var j=0; j<emoji.data[i][3].length; j++){
				emoji.map.colons[emoji.data[i][3][j]] = i;
			}
		}
	};
	emoji.init_unified = function(){
		if (emoji.inits.unified) return;
		emoji.inits.unified = 1;

		var a = [];
		for (var i in emoji.data) a.push(emoji.data[i][0]);
		emoji.rx_unified = new RegExp('('+a.join('|')+')', "g");

		emoji.map.unified = {};
		for (var i in emoji.data){
			emoji.map.unified[emoji.data[i][0]] = i;
		}
	};
	emoji.init_env = function(){
		if (emoji.inits.env) return;
		emoji.inits.env = 1;
		emoji.replace_mode = 'img';
		emoji.supports_css = false;
		var ua = navigator.userAgent;
		if (window.getComputedStyle){
			var st = window.getComputedStyle(document.body);
			if (st['background-size'] || st['backgroundSize']){
				emoji.supports_css = true;
			}
		}
		if (ua.match(/(iPhone|iPod|iPad|iPhone\s+Simulator)/i)){
			if (ua.match(/OS\s+[12345]/i)){
				emoji.replace_mode = 'softbank';
				return;
			}
			if (ua.match(/OS\s+[6789]/i)){
				emoji.replace_mode = 'unified';
				return;
			}
		}
		if (ua.match(/Mac OS X 10[._ ][789]/i)){
			if (!ua.match(/Chrome/i)){
				emoji.replace_mode = 'unified';
				return;
			}
		}
		// Need a better way to detect android devices that actually
		// support emoji.
		if (false && ua.match(/Android/i)){
			emoji.replace_mode = 'google';
			return;
		}
		if (emoji.supports_css){
			emoji.replace_mode = 'css';
		}
		// nothing fancy detected - use images
	};
	emoji.data = #DATA#;

if (typeof exports === 'object') {
  module.exports = emoji;
} else if (typeof define === 'function' && define.amd) {
  define(function() { return emoji; });
} else {
  this.emoji = emoji;
}

}).call(function() {
  return this || (typeof window !== 'undefined' ? window : global);
}());
